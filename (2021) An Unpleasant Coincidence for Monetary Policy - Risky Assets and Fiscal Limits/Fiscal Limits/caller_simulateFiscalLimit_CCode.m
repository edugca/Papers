% Call C++ code

nThreads        = 1;
nSimsPerBlock   = nSimulations / nThreads;

fiscalLimit_mu  = zeros(nStates, nStates, nStates, nStates);
fiscalLimit_std = zeros(nStates, nStates, nStates, nStates);

fiscalLimit_temp        = [];

% Open Multithreading
%myPool = parpool(4);

for iSimBlock = 1:nThreads

    startSimIndex  = (iSimBlock-1)* nSimsPerBlock + 1;
    endSimIndex    = iSimBlock* nSimsPerBlock;
    
    fiscalLimit_mu_temp     = [];
    fiscalLimit_std_temp    = [];
    if strcmpi(useLanguage, 'MatLab')

        [fiscalLimit_mu_temp, fiscalLimit_std_temp, fiscalLimit_temp] = simulateFiscalLimit_CCode_NoPath(...
            int64(nSimsPerBlock), int64(nStates), int64(nFiscalLimit), ...
            sim_epsA(startSimIndex:endSimIndex, :), sim_epsR(startSimIndex:endSimIndex, :), ...
            sim_epsD(startSimIndex:endSimIndex, :), sim_epsG(startSimIndex:endSimIndex, :), ...
            sim_epsBeta(startSimIndex:endSimIndex, :), ...
            rng_epsA, rng_epsR, rng_epsD, rng_epsG, rng_epsBeta, ...
            aTildeSS, recTildeSS, gSS, defSS, ySS, zSS, tLSSS, yMaxSS, tauMaxSS, ...
            beta, chi, eta, kkSS, sigma, alphaG, gammaGPSI, fracNR, ...
            rhoBeta, rhoA, rhoR, rhoD, rhoGG, rhoGY, ...
            sigmaBeta, sigmaA, sigmaR, sigmaD, sigmaG, ...
            psiShockObservedWithDelay, ...
            govCeiling);

    elseif strcmpi(useLanguage, 'C++')

        [fiscalLimit_mu_temp, fiscalLimit_std_temp, fiscalLimit_temp] = simulateFiscalLimit_CPUCode_NoPath_mex(...
            int64(nSimsPerBlock), int64(nStates), int64(nFiscalLimit), ...
            sim_epsA(startSimIndex:endSimIndex, :), sim_epsR(startSimIndex:endSimIndex, :), ...
            sim_epsD(startSimIndex:endSimIndex, :), sim_epsG(startSimIndex:endSimIndex, :), ...
            sim_epsBeta(startSimIndex:endSimIndex, :), ...
            rng_epsA, rng_epsR, rng_epsD, rng_epsG, rng_epsBeta, ...
            aTildeSS, recTildeSS, gSS, defSS, ySS, zSS, tLSSS, yMaxSS, tauMaxSS, ...
            beta, chi, eta, kkSS, sigma, alphaG, gammaGPSI, fracNR, ...
            rhoBeta, rhoA, rhoR, rhoD, rhoGG, rhoGY, ...
            sigmaBeta, sigmaA, sigmaR, sigmaD, sigmaG, ...
            psiShockObservedWithDelay);

    elseif strcmpi(useLanguage, 'GPU')

        [fiscalLimit_mu_temp, fiscalLimit_std_temp, fiscalLimit_temp] = simulateFiscalLimit_GPUCode_mex(...
            int32(nSimsPerBlock), int32(nStates), int32(nFiscalLimit), ...
            sim_epsA(startSimIndex:endSimIndex, :), sim_epsR(startSimIndex:endSimIndex, :), ...
            sim_epsD(startSimIndex:endSimIndex, :), sim_epsG(startSimIndex:endSimIndex, :), ...
            sim_epsBeta(startSimIndex:endSimIndex, :), ...
            rng_epsA, rng_epsR, rng_epsD, rng_epsG, rng_epsBeta, ...
            single(aTildeSS), single(recTildeSS), single(gSS), single(defSS), single(ySS),  single(zSS), single(tLSSS), single(yMaxSS), single(tauMaxSS), ...
            single(beta), single(chi), single(eta), single(kkSS), single(sigma), single(alphaG), single(gammaGPSI), single(fracNR), ...
            single(rhoBeta), single(rhoA), single(rhoR), single(rhoD), single(rhoGG), single(rhoGY), ...
            single(sigmaBeta), single(sigmaA), single(sigmaR), single(sigmaD), single(sigmaG), ...
            psiShockObservedWithDelay);

    end
    
    fiscalLimit_mu  = fiscalLimit_mu + fiscalLimit_mu_temp;
    fiscalLimit_std = fiscalLimit_std + fiscalLimit_std_temp;
end

fiscalLimit_mu  = fiscalLimit_mu ./ nThreads;
fiscalLimit_std = fiscalLimit_std ./ nThreads;
fiscalLimit     = fiscalLimit_temp;
